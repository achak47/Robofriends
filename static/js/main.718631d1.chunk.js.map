{"version":3,"sources":["reportWebVitals.js","Card.js","Cardlist.js","Search.js","Scroll.js","ErrorBoundary.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","str","name","className","src","class","alt","username","email","Cardlist","Robots","robots","map","element","index","id","length","Search","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","border","margin","children","ErrorBoundry","state","hasError","error","info","this","setState","console","log","Component","App","onSearch","event","target","value","fetch","response","json","users","filterrobots","filter","toLowerCase","includes","ErrorBoundary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSGQ,EAdJ,SAACC,GACZ,IAAIC,EAAM,wBAAyBD,EAAME,KACvC,OACE,sBAAKC,UAAU,uDAAf,UACA,qBAAKC,IAAKH,EAAKI,MAAM,eAAeC,IAAI,qBACxC,gCACE,6BAAKN,EAAME,OACX,4BAAIF,EAAMO,WACV,4BAAIP,EAAMQ,eCKHC,EAZE,SAAC,GAAc,IAAZC,EAAW,EAAXA,OACZC,EAASD,EAAOE,KAAI,SAACC,EAAQC,GAAT,OAAiB,cAAC,EAAD,CAAMC,GAAKF,EAAQE,GAAIb,KAAMW,EAAQX,KAAMK,SAAUM,EAAQN,SAAUC,MAAOK,EAAQL,WAKnI,OAJwB,GAAjBE,EAAOM,SAEPL,EAAS,mBAAGR,UAAU,SAAb,8CAGhB,gCACEQ,EADF,SCJeM,EALA,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACC,uBAAOC,KAAK,SAASC,YAAY,gBAAgBlB,UAAU,kCAAkCmB,SAAYH,KCM/FI,EAPA,SAACvB,GACZ,OACG,qBAAKwB,MAAO,CAAEC,UAAW,SAAWC,OAAQ,QAAUC,OAAQ,kBAAoBC,OAAS,QAA3F,SACE5B,EAAM6B,YCcCC,E,kDAjBZ,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IACD+B,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAAEJ,UAAU,IAC1BK,QAAQC,IAAIL,EAAMC,EAAK,S,oBAE9B,WAIG,OAHIC,KAAKJ,MAAMC,SAGRG,KAAKnC,MAAM6B,a,GAfKU,aCyCZC,E,kDAnCf,aAAe,IAAD,8BACZ,gBAMFC,SAAW,SAACC,GACV,EAAKN,SAAS,CAAElB,YAAawB,EAAMC,OAAOC,SAN1C,EAAKb,MAAQ,CACXpB,OAAS,GACTO,YAAc,IAJJ,E,qDAUd,WAAqB,IAAD,OAClB2B,MAAM,8CACLpD,MAAK,SAAAqD,GAAQ,OAAGA,EAASC,UACzBtD,MAAK,SAAAuD,GAAU,EAAKZ,SAAS,CAACzB,OAAQqC,S,oBAEzC,WAAS,IAAD,OACAC,EAAed,KAAKJ,MAAMpB,OAAOuC,QAAO,SAAAvC,GAC5C,OAAOA,EAAOT,KAAKiD,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAEnE,OAAgC,IAA7BhB,KAAKJ,MAAMpB,OAAOK,OACZ,4CAGT,cAACqC,EAAD,UACE,sBAAKhD,MAAM,KAAX,UACA,cAAC,EAAD,CAAQc,aAAcgB,KAAKM,WAC1B,cAAC,EAAD,UACC,cAAC,EAAD,CAAU/B,OAASuC,e,GA5BPV,aCAlBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,sBAAKrD,UAAU,KAAf,UACE,+CACC,cAAC,EAAD,SAIHsD,SAASC,eAAe,SAM1BpE,K","file":"static/js/main.718631d1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react' ;\r\nimport './index.css' ;\r\nconst Card = (props)=> {\r\n  var str = 'https://robohash.org/'+ props.name ;\r\n    return (\r\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n      <img src={str} class=\"card-img-top\" alt=\"Image Loading...\"></img>\r\n      <div>\r\n        <h5>{props.name}</h5>\r\n        <p>{props.username}</p>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n     \r\n    );\r\n  }  \r\n  export default Card;\r\n  ","import React from 'react' ;\r\nimport Card from './Card' ;\r\nimport './index.css';\r\nconst Cardlist = ({ Robots })=>{\r\n    var robots = Robots.map((element,index)=><Card id={ element.id} name={element.name} username={element.username} email={element.email}/>) ;\r\n    if(Robots.length == 0)\r\n    {\r\n       robots = <p className='colour'>Sorry Couldn't find your search</p>\r\n    }\r\nreturn(\r\n<div>\r\n{ robots } ;\r\n</div>\r\n) ;\r\n}\r\nexport default Cardlist ;","import React from 'react';\r\nconst Search = ({searchfield, searchChange})=>{\r\n    return(\r\n     <input type='search' placeholder='search robots' className='pa3 ba --green bg-lightest-blue' onChange = {searchChange}  />\r\n    );\r\n}\r\nexport default Search ;","import React from 'react' ;\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n       <div style={{ overflowY: 'scroll' , height: '500px' , border: '3px solid black' , margin : '10px'}}>\r\n        {props.children}\r\n       </div>\r\n    ) ;\r\n}\r\nexport default Scroll ;","import React, { Component } from 'react' ;\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            hasError: false \r\n        }\r\n    }\r\n    componentDidCatch(error,info){                                 //kind of try catch in method of error catching\r\n        this.setState({ hasError: true})\r\n        console.log(error,info,'Noo') ;\r\n    }\r\n render(){\r\n     if(this.state.hasError){\r\n         <h1>Oops Something went wrong</h1>\r\n     }\r\n    return this.props.children\r\n }\r\n}\r\n export default ErrorBoundry ;","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Cardlist from './Cardlist' ;\r\nimport Search from './Search' ;\r\nimport Scroll from './Scroll' ;\r\nimport ErrorBoundary from './ErrorBoundary' ;\r\nclass App extends Component{\r\nconstructor() {\r\n  super() \r\n  this.state = {\r\n    robots : [] ,\r\n    searchfield : ''\r\n  }\r\n}\r\nonSearch = (event)=>{\r\n  this.setState({ searchfield: event.target.value})\r\n}\r\ncomponentDidMount() {\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response=> response.json() )\r\n  .then(users => {this.setState({robots: users})}) ;\r\n}\r\nrender(){\r\n  const filterrobots = this.state.robots.filter(robots =>{\r\n    return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n  }) \r\n  if(this.state.robots.length === 0){\r\n    return <h1>loading...</h1> \r\n  }else{\r\n   return (\r\n  <ErrorBoundary>\r\n    <div class='tc'> \r\n    <Search searchChange={this.onSearch}/>\r\n     <Scroll>\r\n      <Cardlist Robots= {filterrobots} />\r\n     </Scroll>\r\n     </div>\r\n    </ErrorBoundary>\r\n          ); \r\n      } \r\n        }\r\n}\r\nexport default App ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App' ;\nimport Search from './Search' ;\nReactDOM.render(\n  <React.StrictMode>\n  <div className='tc'> \n    <h1> robofriends </h1>\n     <App />\n  </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}